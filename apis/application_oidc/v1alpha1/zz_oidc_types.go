// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OidcInitParameters struct {

	// (Boolean) Access token role assertion
	// Access token role assertion
	AccessTokenRoleAssertion *bool `json:"accessTokenRoleAssertion,omitempty" tf:"access_token_role_assertion,omitempty"`

	// (String) Access token type, supported values: OIDC_TOKEN_TYPE_BEARER, OIDC_TOKEN_TYPE_JWT
	// Access token type, supported values: OIDC_TOKEN_TYPE_BEARER, OIDC_TOKEN_TYPE_JWT
	AccessTokenType *string `json:"accessTokenType,omitempty" tf:"access_token_type,omitempty"`

	// (List of String) Additional origins
	// Additional origins
	AdditionalOrigins []*string `json:"additionalOrigins,omitempty" tf:"additional_origins,omitempty"`

	// (String) App type, supported values: OIDC_APP_TYPE_WEB, OIDC_APP_TYPE_USER_AGENT, OIDC_APP_TYPE_NATIVE
	// App type, supported values: OIDC_APP_TYPE_WEB, OIDC_APP_TYPE_USER_AGENT, OIDC_APP_TYPE_NATIVE
	AppType *string `json:"appType,omitempty" tf:"app_type,omitempty"`

	// (String) Auth method type, supported values: OIDC_AUTH_METHOD_TYPE_BASIC, OIDC_AUTH_METHOD_TYPE_POST, OIDC_AUTH_METHOD_TYPE_NONE, OIDC_AUTH_METHOD_TYPE_PRIVATE_KEY_JWT
	// Auth method type, supported values: OIDC_AUTH_METHOD_TYPE_BASIC, OIDC_AUTH_METHOD_TYPE_POST, OIDC_AUTH_METHOD_TYPE_NONE, OIDC_AUTH_METHOD_TYPE_PRIVATE_KEY_JWT
	AuthMethodType *string `json:"authMethodType,omitempty" tf:"auth_method_type,omitempty"`

	// (String) Clockskew
	// Clockskew
	ClockSkew *string `json:"clockSkew,omitempty" tf:"clock_skew,omitempty"`

	// (Boolean) Dev mode
	// Dev mode
	DevMode *bool `json:"devMode,omitempty" tf:"dev_mode,omitempty"`

	// (List of String) Grant types, supported values: OIDC_GRANT_TYPE_AUTHORIZATION_CODE, OIDC_GRANT_TYPE_IMPLICIT, OIDC_GRANT_TYPE_REFRESH_TOKEN, OIDC_GRANT_TYPE_DEVICE_CODE
	// Grant types, supported values: OIDC_GRANT_TYPE_AUTHORIZATION_CODE, OIDC_GRANT_TYPE_IMPLICIT, OIDC_GRANT_TYPE_REFRESH_TOKEN, OIDC_GRANT_TYPE_DEVICE_CODE
	GrantTypes []*string `json:"grantTypes,omitempty" tf:"grant_types,omitempty"`

	// (Boolean) ID token role assertion
	// ID token role assertion
	IDTokenRoleAssertion *bool `json:"idTokenRoleAssertion,omitempty" tf:"id_token_role_assertion,omitempty"`

	// (Boolean) Token userinfo assertion
	// Token userinfo assertion
	IDTokenUserinfoAssertion *bool `json:"idTokenUserinfoAssertion,omitempty" tf:"id_token_userinfo_assertion,omitempty"`

	// (String) ID of the organization
	// ID of the organization
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// (List of String) Post logout redirect URIs
	// Post logout redirect URIs
	PostLogoutRedirectUris []*string `json:"postLogoutRedirectUris,omitempty" tf:"post_logout_redirect_uris,omitempty"`

	// (String) ID of the project
	// ID of the project
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (List of String) RedirectURIs
	// RedirectURIs
	RedirectUris []*string `json:"redirectUris,omitempty" tf:"redirect_uris,omitempty"`

	// (List of String) Response type, supported values: OIDC_RESPONSE_TYPE_CODE, OIDC_RESPONSE_TYPE_ID_TOKEN, OIDC_RESPONSE_TYPE_ID_TOKEN_TOKEN
	// Response type, supported values: OIDC_RESPONSE_TYPE_CODE, OIDC_RESPONSE_TYPE_ID_TOKEN, OIDC_RESPONSE_TYPE_ID_TOKEN_TOKEN
	ResponseTypes []*string `json:"responseTypes,omitempty" tf:"response_types,omitempty"`

	// (String) Version, supported values: OIDC_VERSION_1_0
	// Version, supported values: OIDC_VERSION_1_0
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type OidcObservation struct {

	// (Boolean) Access token role assertion
	// Access token role assertion
	AccessTokenRoleAssertion *bool `json:"accessTokenRoleAssertion,omitempty" tf:"access_token_role_assertion,omitempty"`

	// (String) Access token type, supported values: OIDC_TOKEN_TYPE_BEARER, OIDC_TOKEN_TYPE_JWT
	// Access token type, supported values: OIDC_TOKEN_TYPE_BEARER, OIDC_TOKEN_TYPE_JWT
	AccessTokenType *string `json:"accessTokenType,omitempty" tf:"access_token_type,omitempty"`

	// (List of String) Additional origins
	// Additional origins
	AdditionalOrigins []*string `json:"additionalOrigins,omitempty" tf:"additional_origins,omitempty"`

	// (String) App type, supported values: OIDC_APP_TYPE_WEB, OIDC_APP_TYPE_USER_AGENT, OIDC_APP_TYPE_NATIVE
	// App type, supported values: OIDC_APP_TYPE_WEB, OIDC_APP_TYPE_USER_AGENT, OIDC_APP_TYPE_NATIVE
	AppType *string `json:"appType,omitempty" tf:"app_type,omitempty"`

	// (String) Auth method type, supported values: OIDC_AUTH_METHOD_TYPE_BASIC, OIDC_AUTH_METHOD_TYPE_POST, OIDC_AUTH_METHOD_TYPE_NONE, OIDC_AUTH_METHOD_TYPE_PRIVATE_KEY_JWT
	// Auth method type, supported values: OIDC_AUTH_METHOD_TYPE_BASIC, OIDC_AUTH_METHOD_TYPE_POST, OIDC_AUTH_METHOD_TYPE_NONE, OIDC_AUTH_METHOD_TYPE_PRIVATE_KEY_JWT
	AuthMethodType *string `json:"authMethodType,omitempty" tf:"auth_method_type,omitempty"`

	// (String) Clockskew
	// Clockskew
	ClockSkew *string `json:"clockSkew,omitempty" tf:"clock_skew,omitempty"`

	// (Boolean) Dev mode
	// Dev mode
	DevMode *bool `json:"devMode,omitempty" tf:"dev_mode,omitempty"`

	// (List of String) Grant types, supported values: OIDC_GRANT_TYPE_AUTHORIZATION_CODE, OIDC_GRANT_TYPE_IMPLICIT, OIDC_GRANT_TYPE_REFRESH_TOKEN, OIDC_GRANT_TYPE_DEVICE_CODE
	// Grant types, supported values: OIDC_GRANT_TYPE_AUTHORIZATION_CODE, OIDC_GRANT_TYPE_IMPLICIT, OIDC_GRANT_TYPE_REFRESH_TOKEN, OIDC_GRANT_TYPE_DEVICE_CODE
	GrantTypes []*string `json:"grantTypes,omitempty" tf:"grant_types,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) ID token role assertion
	// ID token role assertion
	IDTokenRoleAssertion *bool `json:"idTokenRoleAssertion,omitempty" tf:"id_token_role_assertion,omitempty"`

	// (Boolean) Token userinfo assertion
	// Token userinfo assertion
	IDTokenUserinfoAssertion *bool `json:"idTokenUserinfoAssertion,omitempty" tf:"id_token_userinfo_assertion,omitempty"`

	// (String) ID of the organization
	// ID of the organization
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// (List of String) Post logout redirect URIs
	// Post logout redirect URIs
	PostLogoutRedirectUris []*string `json:"postLogoutRedirectUris,omitempty" tf:"post_logout_redirect_uris,omitempty"`

	// (String) ID of the project
	// ID of the project
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (List of String) RedirectURIs
	// RedirectURIs
	RedirectUris []*string `json:"redirectUris,omitempty" tf:"redirect_uris,omitempty"`

	// (List of String) Response type, supported values: OIDC_RESPONSE_TYPE_CODE, OIDC_RESPONSE_TYPE_ID_TOKEN, OIDC_RESPONSE_TYPE_ID_TOKEN_TOKEN
	// Response type, supported values: OIDC_RESPONSE_TYPE_CODE, OIDC_RESPONSE_TYPE_ID_TOKEN, OIDC_RESPONSE_TYPE_ID_TOKEN_TOKEN
	ResponseTypes []*string `json:"responseTypes,omitempty" tf:"response_types,omitempty"`

	// (String) Version, supported values: OIDC_VERSION_1_0
	// Version, supported values: OIDC_VERSION_1_0
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type OidcParameters struct {

	// (Boolean) Access token role assertion
	// Access token role assertion
	// +kubebuilder:validation:Optional
	AccessTokenRoleAssertion *bool `json:"accessTokenRoleAssertion,omitempty" tf:"access_token_role_assertion,omitempty"`

	// (String) Access token type, supported values: OIDC_TOKEN_TYPE_BEARER, OIDC_TOKEN_TYPE_JWT
	// Access token type, supported values: OIDC_TOKEN_TYPE_BEARER, OIDC_TOKEN_TYPE_JWT
	// +kubebuilder:validation:Optional
	AccessTokenType *string `json:"accessTokenType,omitempty" tf:"access_token_type,omitempty"`

	// (List of String) Additional origins
	// Additional origins
	// +kubebuilder:validation:Optional
	AdditionalOrigins []*string `json:"additionalOrigins,omitempty" tf:"additional_origins,omitempty"`

	// (String) App type, supported values: OIDC_APP_TYPE_WEB, OIDC_APP_TYPE_USER_AGENT, OIDC_APP_TYPE_NATIVE
	// App type, supported values: OIDC_APP_TYPE_WEB, OIDC_APP_TYPE_USER_AGENT, OIDC_APP_TYPE_NATIVE
	// +kubebuilder:validation:Optional
	AppType *string `json:"appType,omitempty" tf:"app_type,omitempty"`

	// (String) Auth method type, supported values: OIDC_AUTH_METHOD_TYPE_BASIC, OIDC_AUTH_METHOD_TYPE_POST, OIDC_AUTH_METHOD_TYPE_NONE, OIDC_AUTH_METHOD_TYPE_PRIVATE_KEY_JWT
	// Auth method type, supported values: OIDC_AUTH_METHOD_TYPE_BASIC, OIDC_AUTH_METHOD_TYPE_POST, OIDC_AUTH_METHOD_TYPE_NONE, OIDC_AUTH_METHOD_TYPE_PRIVATE_KEY_JWT
	// +kubebuilder:validation:Optional
	AuthMethodType *string `json:"authMethodType,omitempty" tf:"auth_method_type,omitempty"`

	// (String) Clockskew
	// Clockskew
	// +kubebuilder:validation:Optional
	ClockSkew *string `json:"clockSkew,omitempty" tf:"clock_skew,omitempty"`

	// (Boolean) Dev mode
	// Dev mode
	// +kubebuilder:validation:Optional
	DevMode *bool `json:"devMode,omitempty" tf:"dev_mode,omitempty"`

	// (List of String) Grant types, supported values: OIDC_GRANT_TYPE_AUTHORIZATION_CODE, OIDC_GRANT_TYPE_IMPLICIT, OIDC_GRANT_TYPE_REFRESH_TOKEN, OIDC_GRANT_TYPE_DEVICE_CODE
	// Grant types, supported values: OIDC_GRANT_TYPE_AUTHORIZATION_CODE, OIDC_GRANT_TYPE_IMPLICIT, OIDC_GRANT_TYPE_REFRESH_TOKEN, OIDC_GRANT_TYPE_DEVICE_CODE
	// +kubebuilder:validation:Optional
	GrantTypes []*string `json:"grantTypes,omitempty" tf:"grant_types,omitempty"`

	// (Boolean) ID token role assertion
	// ID token role assertion
	// +kubebuilder:validation:Optional
	IDTokenRoleAssertion *bool `json:"idTokenRoleAssertion,omitempty" tf:"id_token_role_assertion,omitempty"`

	// (Boolean) Token userinfo assertion
	// Token userinfo assertion
	// +kubebuilder:validation:Optional
	IDTokenUserinfoAssertion *bool `json:"idTokenUserinfoAssertion,omitempty" tf:"id_token_userinfo_assertion,omitempty"`

	// (String) ID of the organization
	// ID of the organization
	// +kubebuilder:validation:Optional
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// (List of String) Post logout redirect URIs
	// Post logout redirect URIs
	// +kubebuilder:validation:Optional
	PostLogoutRedirectUris []*string `json:"postLogoutRedirectUris,omitempty" tf:"post_logout_redirect_uris,omitempty"`

	// (String) ID of the project
	// ID of the project
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// (List of String) RedirectURIs
	// RedirectURIs
	// +kubebuilder:validation:Optional
	RedirectUris []*string `json:"redirectUris,omitempty" tf:"redirect_uris,omitempty"`

	// (List of String) Response type, supported values: OIDC_RESPONSE_TYPE_CODE, OIDC_RESPONSE_TYPE_ID_TOKEN, OIDC_RESPONSE_TYPE_ID_TOKEN_TOKEN
	// Response type, supported values: OIDC_RESPONSE_TYPE_CODE, OIDC_RESPONSE_TYPE_ID_TOKEN, OIDC_RESPONSE_TYPE_ID_TOKEN_TOKEN
	// +kubebuilder:validation:Optional
	ResponseTypes []*string `json:"responseTypes,omitempty" tf:"response_types,omitempty"`

	// (String) Version, supported values: OIDC_VERSION_1_0
	// Version, supported values: OIDC_VERSION_1_0
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

// OidcSpec defines the desired state of Oidc
type OidcSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OidcParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OidcInitParameters `json:"initProvider,omitempty"`
}

// OidcStatus defines the observed state of Oidc.
type OidcStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OidcObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Oidc is the Schema for the Oidcs API. Resource representing an OIDC application belonging to a project, with all configuration possibilities.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,zitadel}
type Oidc struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.grantTypes) || (has(self.initProvider) && has(self.initProvider.grantTypes))",message="spec.forProvider.grantTypes is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.projectId) || (has(self.initProvider) && has(self.initProvider.projectId))",message="spec.forProvider.projectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.redirectUris) || (has(self.initProvider) && has(self.initProvider.redirectUris))",message="spec.forProvider.redirectUris is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.responseTypes) || (has(self.initProvider) && has(self.initProvider.responseTypes))",message="spec.forProvider.responseTypes is a required parameter"
	Spec   OidcSpec   `json:"spec"`
	Status OidcStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OidcList contains a list of Oidcs
type OidcList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Oidc `json:"items"`
}

// Repository type metadata.
var (
	Oidc_Kind             = "Oidc"
	Oidc_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Oidc_Kind}.String()
	Oidc_KindAPIVersion   = Oidc_Kind + "." + CRDGroupVersion.String()
	Oidc_GroupVersionKind = CRDGroupVersion.WithKind(Oidc_Kind)
)

func init() {
	SchemeBuilder.Register(&Oidc{}, &OidcList{})
}
